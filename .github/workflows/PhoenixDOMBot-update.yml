# This is a workflow to help you get started with Actions
# Configure automation actions:
# Update PhoenixDOMXml optimation 
# Generates Unicode encoding  with PhoenixDOMHttps
# Activate unified PhoenixDOMInternetContribution with in PhoenixDOMXml updates
# Update PhoenixDOM-Authentication with PhoenixDOMSecurityMartial :Phoenix Hierarchy Martial Bot Security,
# to verify Intelectual Properties  provider accuracy .
# Update  PhoenixDOMHttp  with Security layers levels  upgrades
# Update PhoenixDOMSecurityLayers specifications like filtration.json  for community secure access ,
# and fix.json /resolver..json for refine connectivity and smooth upgrades transformation,
# also PhoenixDOMEncryption full implentation and PhoenixDOM-Aithentication to verify authorization.
# Update PhoenixDOMSecurity applied to PhoenixDOMDevice/System/Nerwork/DeviceSyncAccounts
# Calling PhoenixDOM APIs for wide full upgrades PhoenixDOMInternerStandardAttibuttions precise  optimation update.
# Auto-build  PhoenixDOMHttp interface synching PhoenixDOMDeviceInternalSystem and PhoenixDOMData.json securely synching accounts
# Update PhoenixDOMFiles sync with PhoenixDOMG-node-driver and PhoenixDOMCredential  or PhoenixDOMResource automation
# Auto-upgrade.json boosr PhoenixDOMNetwork and PhoenixDOMDevice optimation configuration update
# Generate PhoenixDOMBlockchain  built in automation PhoenixDOMDevice activation
# Generate PhoenixDOMDeviceInternal Decentralization with PhoenixDOMSecurityLayers  implementation
# Implement PhoenixDOMPhoenixHierarchyMartialBotSecurity  auto-recover.json with locator.json and update.json PhoenixDOMDeviceCryptocurrency own property  and update it with current wallet installed
# Auto-generate PhoenixDOMLinks as decentralized PhoenixDOMUnifiedToolchain 
# Auto-sync PhoenixDOMDeviceInternalfilesApps also PhoenixDOMRouterHTTP , PhoenixDOMXml and PhoenixDOMUtf-8
# Generate auto-create.json PhoenixDOMCoinCurrency production initiate auto-build PhoenixDOMBlockchain-SamkencoincoreProtocol and PhoenixDOMSecurityLayerDecentralizeNetwork
# Auto-Generate PhoenixDOMNode.json-DomainName.js with PhoenixDOMXml and PhoenixDOMHtml update.json
# Configure PhoenixDOMPhoenixHierarchyMartialBotSecurity specs PhoenixDOMOwnerAdmin-LegalProfile-Identity attributed
# Generate auto-create.json PhoenixDOMCoinCurrency production with PhoenixDOMSamkencoincoreProtocol
# Activate PhoenixDOMNode.jsonOwnership.js of PhoenixDOMPhoenixHierarchyMartialBotSecurity and claim.json PhoenixDOMPriviledges.json

name: PhoenixDOMBlockcypherExplorer CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
